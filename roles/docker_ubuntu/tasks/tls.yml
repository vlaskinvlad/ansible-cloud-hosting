---
# See: http://docs.docker.com/articles/https/

- name: creates directories
  file: 
    state: directory
    path: '{{ docker_tls_dir }}'
    mode: 0400
    owner: root
  with_items:
    - '{{ docker_tls_dir }}'


- name: uploads certifications
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0400
    owner: root
  with_items:
    - { src: certs/ca/ca.pem, dest: '{{ docker_tls_ca_cert_file }}' }
    - { src: certs/ca/ca-key.pem, dest: '{{ docker_tls_ca_key_file }}' }
  notify:
    # Restart docker if certifications changes
    - Restart docker


- name: generates RSA private key
  command: 'openssl genrsa -out {{ docker_tls_server_key_file }} 4096'
  args:
    chdir: '{{ docker_tls_dir }}'
    creates: '{{ docker_tls_server_key_file }}'
  notify:
    # Restart docker if key changes
    - Restart docker


- name: creates certificate signing request
  command: 'openssl req -subj "/CN={{ ansible_fqdn }}" -sha256 -new -key {{ docker_tls_server_key_file }} -out {{ docker_tls_dir }}/server.csr'
  args:
    chdir: '{{ docker_tls_dir }}'
    creates: '{{ docker_tls_dir }}/server.csr'


- name: uploads 'extfile.cnf' configuration file
  template:
    src: 'extfile.cnf.j2'
    dest: '{{ docker_tls_dir }}/server-extfile.cnf'


- name: generates certificate
  command: 'openssl x509 -req -days 1825 -sha256 -in {{ docker_tls_dir }}/server.csr -CA {{ docker_tls_ca_cert_file }} -CAkey {{ docker_tls_ca_key_file }} -CAcreateserial -out {{ docker_tls_server_cert_file }} -extensions v3_req -extfile {{ docker_tls_dir }}/server-extfile.cnf -passin "pass:{{ certs_ca_password }}"'
  args:
    chdir: '{{ docker_tls_dir }}'
    creates: '{{ docker_tls_server_cert_file }}'
  notify:
    # Restart docker if certificate changes
    - Restart docker

